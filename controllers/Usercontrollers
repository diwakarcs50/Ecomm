const User = require('../models/Users');
const customError = require('../utils/customerror');
const Cookietoken = require('../utils/cookieToken');
const cloudinary = require('cloudinary').v2;


exports.signup = async (req, res, next) => {
  try {
    if (!req.files) {
      throw new customError('Please upload an image', 400);
    }

    const file = req.files.photo;

    let result;
    try {
      result = await cloudinary.uploader.upload(file.tempFilePath, {
        folder: 'test',
        width: 150,
      });
    } catch (error) {
        console.error('clodinary error ',error)
      throw new customError('Error uploading image to Cloudinary', 500);
    }

    const { name, email, password } = req.body;

    if (!name || !email || !password) {
      throw new customError('Please provide name, email, and password', 400);
    }

    const user = await User.create({
      name,
      email,
      password,
      photo: {
        id: result.public_id,
        secure_url: result.secure_url,
      },
    });

    Cookietoken(res, user);

    res.status(200).json({
      success: true,
      message: 'User created and logged in successfully',
      data: user,
    });
  } catch (error) {
    next(error); // Pass the error to the error handling middleware
  }
};


exports.signin=async(req,res,next)=>{
    try{
        const {email,password}=req.body
        if( ! email|| !password){
           return  next(new customError(`fields missing`,501))
        }
      

        //checking in the database
        const user=await User.findOne({email}).select('+password')

        if(!user){
            throw new customError('you are not a registered user',404)
        }
        const IsPasswordCorrect=await user.IsPasswordValidate(password)
        if(!IsPasswordCorrect){
            console.log(IsPasswordCorrect)
            console.log(user.password)
            console.log(password)
           return next(new customError('password wrong',201)) 
        }

         Cookietoken(res,user)
        
    }
    catch(error){
       next(error)
    }
   



}

exports.logout=async(req,res,next)=>{
    res.cookie('cookieToken',null,{
      expires:new Date(Date.now()),
      httpOnly:true

    })
    res.status(200).json({
      success:true,
      message:"logout was successfull"
    })


}

    
   
